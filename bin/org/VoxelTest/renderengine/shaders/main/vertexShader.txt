#version 400 core

in vec3 position;
in vec2 textureCoords;

out vec2 pass_textureCoords;
out float visibility;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;

const float density = 0.1;
const float gradient = 1.0;

void main (void) {
	vec4 worldPosition = transformationMatrix * vec4(position, 1.0);
	vec4 posRelativeToCam = viewMatrix * worldPosition;
	gl_Position = projectionMatrix * posRelativeToCam;
	pass_textureCoords = textureCoords;
	
	float distance = length(posRelativeToCam.xyz);
	//visibility = exp(-pow((distance*density), gradient));
	//visibility = clamp(visibility, 0.0, 1.0);
}